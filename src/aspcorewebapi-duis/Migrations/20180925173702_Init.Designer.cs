// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspcorewebapi_duis.Core;

namespace aspcorewebapiduis.Migrations
{
    [DbContext(typeof(SQLContext))]
    [Migration("20180925173702_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065");

            modelBuilder.Entity("aspcorewebapi_duis.Models.Duis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.HasKey("ID");

                    b.HasIndex("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Duis");

                    b.HasData(
                        new { ID = 1, Description = "GET", Name = "S" },
                        new { ID = 2, Description = "POST", Name = "I" },
                        new { ID = 3, Description = "POST,GET", Name = "IS" },
                        new { ID = 4, Description = "PUT", Name = "U" },
                        new { ID = 5, Description = "PUT,GET", Name = "US" },
                        new { ID = 6, Description = "PUT,POST", Name = "UI" },
                        new { ID = 7, Description = "PUT,POST,GET", Name = "UIS" },
                        new { ID = 8, Description = "DELETE", Name = "D" },
                        new { ID = 9, Description = "DELETE,GET", Name = "DS" },
                        new { ID = 10, Description = "DELETE,POST", Name = "DI" },
                        new { ID = 11, Description = "DELETE,POST,GET", Name = "DIS" },
                        new { ID = 12, Description = "DELETE,PUT", Name = "DU" },
                        new { ID = 13, Description = "DELETE,PUT,GET", Name = "DUS" },
                        new { ID = 14, Description = "DELETE,PUT,POST", Name = "DUI" },
                        new { ID = 15, Description = "DELETE,PUT,POST,GET", Name = "DUIS" }
                    );
                });

            modelBuilder.Entity("aspcorewebapi_duis.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new { ID = 1, Description = "Администратор", Name = "Admin" },
                        new { ID = 2, Description = "Пользователь", Name = "User" }
                    );
                });

            modelBuilder.Entity("aspcorewebapi_duis.Models.RoleUser", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("RoleUsers");

                    b.HasData(
                        new { RoleId = 1, UserId = 1 }
                    );
                });

            modelBuilder.Entity("aspcorewebapi_duis.Models.Rule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("DuisId");

                    b.Property<int>("RoleId");

                    b.HasKey("ID");

                    b.HasIndex("RoleId", "Controller", "ApplicationName")
                        .IsUnique();

                    b.ToTable("Rules");

                    b.HasData(
                        new { ID = 1, ApplicationName = "aspcorewebapi-duis", Controller = "values", DuisId = 15, RoleId = 1 }
                    );
                });

            modelBuilder.Entity("aspcorewebapi_duis.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FIO")
                        .HasMaxLength(255);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new { ID = 1, Email = "ber.oleg@gmail.com", FIO = "Администратор", Login = "Admin" }
                    );
                });

            modelBuilder.Entity("aspcorewebapi_duis.Models.RoleUser", b =>
                {
                    b.HasOne("aspcorewebapi_duis.Models.Role", "Role")
                        .WithMany("RoleUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("aspcorewebapi_duis.Models.User", "User")
                        .WithMany("RoleUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("aspcorewebapi_duis.Models.Rule", b =>
                {
                    b.HasOne("aspcorewebapi_duis.Models.Role", "Role")
                        .WithMany("Rules")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
